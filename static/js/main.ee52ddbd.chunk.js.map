{"version":3,"sources":["component/img/171-512.png","component/img/edit.svg","component/ItemProduct.js","component/Product.js","component/FormAdd.js","services/index.js","component/Pagination.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ItemProduct","onRemoveProduct","id","name","stock","price","image","onEditProduct","count","description","extras","size","useState","modalEdit","setModalEdit","toggle","handleSubmitEdit","e","productAfterEdit","target","productName","value","productPrice","productImage","productStock","productCount","productDescription","productExtras","productSize","console","log","scope","className","src","alt","Button","color","onClick","edit","type","class","data-toggle","data-target","icon","tabindex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","Modal","isOpen","Form","onSubmit","FormGroup","Input","defaultValue","Product","products","onAddProduct","loading","map","product","key","FormAdd","onSearchProduct","modalAdd","setModalAdd","handleSubmitAddForm","info","handleSubmitSearchProduct","preventDefault","searchBox","placeholder","baseUrl","axios","get","newPrice","post","delete","Pagination","productPage","totalProduct","paginate","pageNumber","i","Math","ceil","push","number","href","App","setProducts","setLoading","currentPage","setCurrentPage","useEffect","a","res","data","fetchProduct","indextLastProduct","indextFirstProduct","currentProduct","slice","productServices","then","response","catch","error","concat","text","filter","put","length","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ee52ddbd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/171-512.995cfe94.png\";","module.exports = __webpack_public_path__ + \"static/media/edit.1c00c84a.svg\";","import React, { useState } from 'react';\nimport '../App.css';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport { Button, Form, FormGroup, Input, Modal } from 'reactstrap'\nimport icon from './img/171-512.png';\nimport edit from './img/edit.svg';\n\nconst ItemProduct = ({ onRemoveProduct, id, name, stock, price, image, onEditProduct,count,description,extras,size}) => {\n    const [modalEdit, setModalEdit] = useState(false);\n\n    const toggle = () => setModalEdit(!modalEdit);\n\n    const handleSubmitEdit = (e) => {\n\n        const productAfterEdit = [e.target.productName.value, e.target.productPrice.value, e.target.productImage.value, e.target.productStock.value, e.target.productCount.value, e.target.productDescription.value, e.target.productExtras.value,e.target.productSize.value]\n        console.log(productAfterEdit, id);\n\n        onEditProduct(productAfterEdit, id)\n    }\n    return (\n\n        <tr>\n            <th scope=\"row\" className=\"id-stt\">{id}</th>\n            <td><img className=\"img-product\" src={image} alt=\"image product\" /></td>\n            <td>{name}</td>\n            <td>{price}<sup>$</sup></td>\n            <td>{stock}</td>\n            <td>{count}</td>\n            <td className=\"active-td\">{description}</td>\n            <td className=\"active-td\">{extras}</td>\n            <td> <Button color=\"secondary edit\" onClick={toggle}><img className=\"icon-delete\" src={edit} /></Button>\n                <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\n                    <img className=\"icon-delete\" src={icon} />\n                </button>\n                <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                    <div class=\"modal-dialog modal-dialog-delete\" role=\"document\">\n                        <div class=\"modal-content modal-content-delete\">\n                            <div class=\"modal-header\">\n                                <h5 class=\"modal-title\" id=\"exampleModalLabel\">GYM HOME</h5>\n                                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </div>\n                            <div class=\"modal-body\">\n                              <p>Bạn có chắc chắn rằng muốn xóa sản phẩm này ?</p>\n                            </div>\n                            <div class=\"modal-footer\">\n                                <button type=\"button\" class=\"btn btn-secondary button-delete\" data-dismiss=\"modal\">Close</button>\n                                <button type=\"button\" class=\"button-delete\" data-dismiss=\"modal\"> <Button className=\"delete\" onClick={() => onRemoveProduct(id)}>Yess</Button></button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </td>\n            <Modal isOpen={modalEdit} toggle={toggle}>\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">×</span>\n                </button>\n                <Form className=\"pt-5 pb-5 pr-5 pl-5\" onSubmit={(e) => handleSubmitEdit(e)}>\n                    <h2 className=\"font-baloo\">Chỉnh Sửa Sản Phẩm</h2>\n                    <p>To get your Full Membership Experience. Choose your preferred trial membership below.</p>\n                    <FormGroup>\n\n                        <Input type=\"text\" name=\"productImage\" id=\"productImage\" defaultValue={image} />\n                    </FormGroup>\n                    <FormGroup>\n\n                        <Input type=\"text\" name=\"productName\" id=\"productName\" defaultValue={name} />\n                    </FormGroup>\n                    <FormGroup>\n\n                        <Input type=\"text\" name=\"productPrice\" id=\"productPrice\" defaultValue={price} />\n                    </FormGroup>\n                    <FormGroup>\n\n                        <Input type=\"text\" name=\"productStock\" id=\"productStock\" defaultValue={stock} />\n                    </FormGroup>\n                    <FormGroup>\n\n                        <Input type=\"text\" name=\"productCount\" id=\"productCount\" defaultValue={count} />\n                    </FormGroup>\n                    <FormGroup>\n\n                        <Input type=\"text\" name=\"productDescription\" id=\"productDescription\" defaultValue={description} />\n                    </FormGroup>\n                    <FormGroup>\n\n                        <Input type=\"text\" name=\"productExtras\" id=\"productExtras\" defaultValue={extras} />\n                    </FormGroup>\n                    <FormGroup>\n\n                        <Input type=\"text\" name=\"productSize\" id=\"productSize\" defaultValue={size} />\n                    </FormGroup>\n                    <Button className=\"btn-submit font-baloo\" color=\"success\" type=\"submit\" onSubmit={(e) => handleSubmitEdit(e)}>Thay đổi Chỉnh Sửa</Button>\n                </Form>\n            </Modal>\n        </tr>\n\n    );\n}\n\nexport default ItemProduct;\n","import React from 'react';\nimport ItemProduct from './ItemProduct'\nfunction Product({ products, onRemoveProduct,onAddProduct,onEditProduct,loading }) {\n    if(loading){\n        return <h5>Loading...</h5>\n    }\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <table>\n                        <tbody>\n                            <tr className=\"th-head\">\n                                <td>STT</td>\n                                <td>Ảnh</td>\n                                <td>Tên Sản Phẩm</td>\n                                <td>Giá</td>\n                                <td>STOCK</td>\n                                <td>Count</td>\n                                <td>Xóa</td>\n                            </tr>\n                            {\n                                products.map(product =>\n                                    <ItemProduct\n                                        key={product.id}\n                                        product={product}\n                                        id={product.id}\n                                        name={product.name}\n                                        price={product.price}\n                                        image={product.image}\n                                        stock={product.stock}\n                                        description={product.description}\n                                        extras={product.extras}\n                                        count={product.count}\n                                        size={product.size}\n                                        onRemoveProduct={onRemoveProduct}\n                                        onEditProduct={onEditProduct}\n                                        onAddProduct={onAddProduct}\n                                        \n                                    />\n                                )\n                            }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Product;\n","import React, { useState } from 'react'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport { Button, Input, Form, Modal, FormGroup } from 'reactstrap'\nimport '../App.css'\nconst FormAdd = ({ onAddProduct, onSearchProduct }) => {\n\n    const [modalAdd, setModalAdd] = useState(false);\n\n    const toggle = () => setModalAdd(!modalAdd);\n\n    const handleSubmitAddForm = (e) => {\n\n        const info = [e.target.productName.value, e.target.productPrice.value, e.target.productImage.value, e.target.productStock.value, e.target.productCount.value, e.target.productDescription.value, e.target.productExtras.value,e.target.productSize.value]\n\n        onAddProduct(info);\n    }\n\n    const handleSubmitSearchProduct = (e) => {\n        e.preventDefault()\n\n        onSearchProduct(e.target.searchBox.value)\n    }\n\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-12 col-md-12-form\">\n                    <div className=\"content-title\">\n                        <h5>Trang CMS quản lý sản phẩm của <span className=\"home-h5\">Home</span> Gym</h5>\n                        <p className=\"p-name-admin\">Admin - Tungnguyen - id:090296</p>\n                    </div>\n                    <div className=\"dashboard\">\n                        <div className=\"button-group\">\n                            <Button className=\"font-baloo-button\" color=\"primary\" onClick={toggle}>Thêm Mới Sản Phẩm</Button>\n                            <Modal isOpen={modalAdd} toggle={toggle}>\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                    <span aria-hidden=\"true\">×</span>\n                                </button>\n                                <Form className=\"pt-5 pb-5 pr-5 pl-5 font-baloo-h2 \" onSubmit={(e) => handleSubmitAddForm(e)}>\n                                    <h2>Thêm Mới Sản Phẩm</h2>\n                                    <p>To get your Full Membership Experience. Choose your preferred trial membership below.</p>\n                                    <FormGroup>\n                                        <Input type=\"text\" name=\"productImage\" id=\"productImage\" placeholder=\"Nhập ảnh sản phẩm mới\" />\n                                    </FormGroup>\n                                    <FormGroup>\n                                        <Input type=\"text\" name=\"productName\" id=\"productName\" placeholder=\"Nhập tên sản phẩm\" />\n                                    </FormGroup>\n                                    <FormGroup>\n                                        <Input type=\"text\" name=\"productPrice\" id=\"productPrice\" placeholder=\"Nhập giá sản phẩm\" />\n                                    </FormGroup>\n                                    <FormGroup>\n                                        <Input type=\"text\" name=\"productStock\" id=\"productStock\" placeholder=\"Nhập stock sản phẩm\" />\n                                    </FormGroup>\n                                    <FormGroup>\n                                        <Input type=\"text\" name=\"productCount\" id=\"productCount\" placeholder=\"Nhập count sản phẩm\" />\n                                    </FormGroup>\n                                    <FormGroup>\n                                        <Input type=\"text\" name=\"productDescription\" id=\"productDescription\" placeholder=\"Nhập description sản phẩm\" />\n                                    </FormGroup>\n                                    <FormGroup>\n                                        <Input type=\"text\" name=\"productExtras\" id=\"productExtras\" placeholder=\"Nhập extras sản phẩm\" />\n                                    </FormGroup>\n                                    <FormGroup>\n                                        <Input type=\"text\" name=\"productSize\" id=\"productSize\" placeholder=\"Nhập size sản phẩm\" />\n                                    </FormGroup>\n                                    <Button className=\"btn-submit font-baloo\" color=\"success\" type=\"submit\" onSubmit={(e) => handleSubmitAddForm(e)} >THÊM SẢN PHẨM</Button>\n                                </Form>\n                            </Modal>\n                        </div>\n\n                        <Form className=\" form-group search-form\" onSubmit={(e) => handleSubmitSearchProduct(e)}>\n                            <Input type=\"text\" name=\"searchBox\" id=\"searchBox\" placeholder=\"Nhập vào để tìm kiếm\" />\n                            <Button color=\"success\" onSubmit={(e) => handleSubmitSearchProduct(e)}>Search</Button>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default FormAdd;","import axios from 'axios';\nconst baseUrl = 'https://json-products.herokuapp.com/products/';\nconst getAll = () =>{\n    return axios.get(baseUrl)\n}\n\nconst create = newPrice => {\n    return axios.post(baseUrl, newPrice)\n  }\n  const remove = id =>{\n      return axios.delete(`${baseUrl}/${id}`)\n  }\n  const editProduct = id =>{\n    return axios.put(`${baseUrl}/${id}`)\n}\nconst update = (id, changedPart) => {\n    return axios.patch(`${baseUrl}/${id}`, changedPart)\n  }\n  \n  export default {\n    getAll,\n    create,\n    remove,\n    update,\n    editProduct\n  }","\n//rafc\n\nimport React from 'react';\n\nconst Pagination = ({ productPage, totalProduct, paginate }) => {\n    const pageNumber = [];\n    for (let i = 1; i <= Math.ceil(totalProduct / productPage); i++) {\n        pageNumber.push(i)\n    }\n    return (\n        <nav>\n            <ul className=\"pagination\">\n                {\n                    pageNumber.map(number => (\n                        <li key={number} className=\"page-item\">\n                            <a onClick={() => paginate(number)} href=\"!#\" className=\"page-link\">\n                                {number}\n                            </a>\n                        </li>\n                    ))\n                }\n            </ul>\n        </nav>\n    );\n}\n\nexport default Pagination;\n","import React, { useState, useEffect } from 'react';\nimport Product from './component/Product';\nimport FormAdd from './component/FormAdd';\nimport productServices from './services';\nimport Pagination from './component/Pagination';\nimport axios from 'axios';\nimport './App.css'\n\n\nfunction App() {\n  const [products, setProducts] = useState([])\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [productPage] = useState(5);\n  //pagination\n  useEffect(() => {\n    const fetchProduct = async () => {\n      setLoading(true)\n      const res = await axios.get('https://json-products.herokuapp.com/products');\n      setProducts(res.data)\n      setLoading(false)\n    }\n\n    fetchProduct()\n  }, [])\n  console.log(products)\n\n  const indextLastProduct = currentPage * productPage;\n  const indextFirstProduct = indextLastProduct - productPage;\n  const currentProduct = products.slice(indextFirstProduct, indextLastProduct)\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber)\n\n\n\n  //getAll\n  useEffect(() => {\n    productServices\n      .getAll()\n      .then(response => setProducts(response.data))\n      .catch(error => console.error(error))\n  }, [])\n\n  //xoa product\n  const onRemoveProduct = id => {\n    productServices\n      .remove(id)//xoa tren sever\n      .then(() => setProducts(products.filter(product => product.id !== id)))// Xóa trong state\n      .catch(error => console.error(error))\n  }\n\n  // them product\n  const onAddProduct = (product) => {\n    productServices\n      .create({\n        name: product[0],\n        price: product[1],\n        image: product[2],\n        stock: product[3],\n        count:product[4],\n        description:product[5],\n        extras:product[6],\n        size:product[7]\n      })\n      .then(res => setProducts(products.concat(res.data)))\n      .catch(error => console.error(error))\n  }\n\n  //edit product\n  const onEditProduct = (product, id) => {\n    axios\n      .put('https://json-products.herokuapp.com/products/' + id, {\n        name: product[0],\n        price: product[1],\n        image: product[2],\n        stock: product[3],\n        count:product[4],\n        description:product[5],\n        extras:product[6],\n        size:product[7]\n      })\n      .then(res => setProducts(products.map(product =>\n        product.id === id ? res.data : product)))\n      .catch(error => console.error(error))\n  }\n\n  const onSearchProduct = (text) => {\n    if (text !== '') {\n      axios\n        .get('https://json-products.herokuapp.com/products?q=' + text)\n        .then(res => setProducts(res.data))\n    }\n    else {\n      return\n    }\n  }\n  return (\n    <div>\n      <FormAdd onSearchProduct={onSearchProduct} onAddProduct={onAddProduct} />\n      <Product products={currentProduct} onRemoveProduct={onRemoveProduct} onEditProduct={onEditProduct} onAddProduct={onAddProduct} loading={loading} />\n      <Pagination productPage={productPage} totalProduct={products.length} paginate={paginate} />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}